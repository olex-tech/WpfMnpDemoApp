<Window x:Class="WpfMnpDemoApp.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Converters="clr-namespace:WpfMnpDemoApp.Converters"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:WpfMnpDemoApp.ViewModels"
        xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:WpfMnpDemoApp"
        mc:Ignorable="d"
        Title="WpfMnpDemoApp" Height="550" Width="640">
    <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="Loaded">
            <Behaviors:InvokeCommandAction Command="{Binding WindowLoadedCommand}" />
        </Behaviors:EventTrigger>
        <Behaviors:EventTrigger EventName="Closing">
            <Behaviors:InvokeCommandAction Command="{Binding WindowClosingCommand}" />
        </Behaviors:EventTrigger>
    </Behaviors:Interaction.Triggers>
    <Window.Resources>
        <Converters:BooleanToBrushConverter x:Key="BooleanToBrushConverter" />
    </Window.Resources>
    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Ellipse Grid.Column="0" Grid.Row="1" Width="19" Height="18" Margin="5"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center"
                 Fill="{Binding CyclicStateOn,
                                Converter={StaticResource BooleanToBrushConverter}}" Stroke="Black">
        </Ellipse>

        <StackPanel Grid.Column="1" Grid.Row="1" Margin="10">
            <StackPanel Orientation="Horizontal">
                <Button Content="Cycle Begin" Margin="0,0,0,0"  Width="100"
                    Command="{Binding CycleBeginCommand, Mode=OneWay}"/>
                <Button Content="Cycle End"  Margin="10,0,0,0"  Width="100" 
                    Command="{Binding CycleEndCommand, Mode=OneWay}"/>
            </StackPanel>
            <StackPanel  Margin="5">
                <TextBlock Text="{Binding CyclicState, StringFormat=Cyclic state: {0}}"></TextBlock>
            </StackPanel>
        </StackPanel>

        <StackPanel Grid.Column="1" Grid.Row="2" Margin="10" Orientation="Vertical">
            <StackPanel  Margin="0">
                <TextBlock Text="Digital Inputs I/O:"></TextBlock>
            </StackPanel>
            <Grid Margin="10" Width="176" Height="44" HorizontalAlignment="Left">
                <ItemsControl ItemsSource="{Binding DigitalInputs}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="8"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Rectangle Width="20" Height="20" Fill="{Binding IsOn,
                                   Converter={StaticResource BooleanToBrushConverter}}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </StackPanel>

        <!-- DockPanel is used to apply auto height of control -->
        <DockPanel Grid.Column="1" Grid.Row="3" LastChildFill="true">
            <!--Width="350" Height="200" -->
            <ListView DockPanel.Dock="Top" ItemsSource="{Binding Axes}"
                    HorizontalAlignment="Left">
                <!--Disable selection styles -->
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected"
                         Value="True">
                                <Setter Property="Background" Value="{x:Null}" />
                                <Setter Property="BorderBrush" Value="{x:Null}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Axis Name" Width="70" DisplayMemberBinding="{Binding AxisName}"/>
                        <GridViewColumn Header="Command Pos" Width="90" DisplayMemberBinding="{Binding CommandPos}"/>
                        <GridViewColumn Header="Feedback Pos" Width="90" DisplayMemberBinding="{Binding FeedbackPos}"/>
                        <GridViewColumn Header="Current Velocity" Width="95" DisplayMemberBinding="{Binding Speed}"/>
                    </GridView>
                </ListView.View>
            </ListView>
        </DockPanel>

        <!-- DockPanel is used to apply auto height of control -->
        <DockPanel Grid.Column="1" Grid.Row="4" LastChildFill="true">
            <!--Width="350" Height="200" -->
            <ListView Margin="0,20,0,0" DockPanel.Dock="Top" ItemsSource="{Binding AxesTranspose}"
                    HorizontalAlignment="Left">
                <!-- Left aligned column names -->
                <ListView.Resources>
                    <Style TargetType="{x:Type GridViewColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                    </Style>
                </ListView.Resources>

                <!--Disable selection styles -->
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected"
                         Value="True">
                                <Setter Property="Background" Value="{x:Null}" />
                                <Setter Property="BorderBrush" Value="{x:Null}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="" Width="90" DisplayMemberBinding="{Binding ParamName}"/>
                        <GridViewColumn Header="Axis0" Width="60" DisplayMemberBinding="{Binding Items[0].Value}"/>
                        <GridViewColumn Header="Axis1" Width="60" DisplayMemberBinding="{Binding Items[1].Value}"/>
                        <GridViewColumn Header="Axis2" Width="60" DisplayMemberBinding="{Binding Items[2].Value}"/>
                        <GridViewColumn Header="Axis3" Width="60" DisplayMemberBinding="{Binding Items[3].Value}"/>
                        <GridViewColumn Header="Axis4" Width="60" DisplayMemberBinding="{Binding Items[4].Value}"/>
                        <GridViewColumn Header="Axis5" Width="60" DisplayMemberBinding="{Binding Items[5].Value}"/>
                        <GridViewColumn Header="Axis6" Width="60" DisplayMemberBinding="{Binding Items[6].Value}"/>
                        <GridViewColumn Header="Axis7" Width="60" DisplayMemberBinding="{Binding Items[7].Value}"/>
                    </GridView>
                </ListView.View>
            </ListView>
        </DockPanel>

        <!--<DataGrid Grid.Column="1" Grid.Row="4" VerticalAlignment="Top"
          ItemsSource="{Binding Axes}" Width="350" HorizontalAlignment="Left"
          AutoGenerateColumns="False" CanUserResizeColumns="True">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Axis Name" Binding="{Binding AxisName}"/>
                <DataGridTextColumn Header="Command Pos" Binding="{Binding CommandPos}"/>
                <DataGridTextColumn Header="Feedback Pos" Binding="{Binding FeedbackPos}"/>
                <DataGridTextColumn Header="Current Velocity" Binding="{Binding Speed}"/>
            </DataGrid.Columns>
        </DataGrid>-->

    </Grid>
</Window>
